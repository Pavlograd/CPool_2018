!<arch>
//                                              188       `
my_sort_int_array.c/
my_compute_power_rec.c/
my_compute_square_root.c/
my_find_prime_sup.c/
my_strcapitalize.c/
my_str_isalpha.c/
my_str_islower.c/
my_str_isupper.c/
my_str_isprintable.c/
my_putchar.c/   1539071141  1000  1000  100755  144       `
/*
** EPITECH PROJECT, 2018
** my_putchar
** File description:
** lib
*/

#include <stdio.h>

void my_putchar(char c)
{
    write(1, &c,  1);
}
my_isneg.c/     1539072042  1000  1000  100755  277       `
/*
** EPITECH PROJECT, 2018
** my_isneg.c
** File description:
** task04
*/

#include <stdio.h>
#include <unistd.h>

int my_isneg(int n)
{
    char N='N';
    char P='P';
	
    if (n < 0)
    {
        my_putchar(N);
    } else {
        my_putchar(P);
    }
    return (0);
}

my_put_nbr.c/   1539074041  1000  1000  100755  119       `
/*
** EPITECH PROJECT, 2018
** my_put_nbr
** File description:
** lib
*/

int my_put_nbr(int nb)
{
    return (0);  
}

my_swap.c/      1539073500  1000  1000  100755  194       `
/*
** EPITECH PROJECT, 2018
** my_swap
** File description:
** task01
*/

#include <stdio.h>
#include <unistd.h>

void my_swap(int *a, int *b)
{
    int c = *a;
    
    *a = *b;
    *b = c;
} 
my_putstr.c/    1539073096  1000  1000  100755  247       `
/*
** EPITECH PROJECT, 2018
** my_putstr
** File description:
** task02
*/

#include <stdio.h>
#include <unistd.h>

int my_putstr(char const *str)
{
    int i = 0;

        while (str[i] != '\0') {
        my_putchar(str[i]);
        i++;
    }
}

my_strlen.c/    1538728799  1000  1000  100755  231       `
/*
** EPITECH PROJECT, 2018
** my_strlen
** File description:
** task03
*/

#include <stdio.h>
#include <unistd.h>

int my_strlen(char const *str)
{
    int i = 0;

    while(str[i] != '\0') {
        i++;
    }
    return (i);
}


my_getnbr.c/    1539074021  1000  1000  100755  124       `
/*
** EPITECH PROJECT, 2018
** my_getnbr
** File description:
** lib
*/

int my_getnbr(char const *str)
{
    return (0);
}
/0              1539153835  1000  1000  100755  144       `
/*
** EPITECH PROJECT, 2018
** my_sort_int_array
** File description:
** lib
*/

void my_sort_int_array(int *tab, int size)
{
    return (0);
}
/21             1538887207  1000  1000  100755  287       `
/*
** EPITECH PROJECT, 2018
** my_compute_power_rec
** File description:
** task04
*/

int my_compute_power_rec(int nb, int p)
{
    if (p < 0) {
        return (0);
    } else if (p == 0) {
        return (1);
    } else {
        return (nb * my_compute_power_rec(nb, p - 1));
    }
}

/45             1538887317  1000  1000  100755  386       `
/*
** EPITECH PROJECT, 2018
** my_compute_square_root
** File description:
** task05
*/

int my_compute_square_root(int nb)
{
    int i = 1;
    int j;

    if (nb < 0) {
        return (0);
    } else {
        while (j != nb) {
            j = i * i;
            i++;
            if (j > nb) {
                return (0);
            } 
        }
        i--;
    }
    return (i);
}
my_is_prime.c/  1539073998  1000  1000  100755  119       `
/*
** EPITECH PROJECT, 2018
** my_is_prime
** File description:
** lib
*/

int my_is_prime(int nb)
{
    return (0);
}

/71             1539092856  1000  1000  100755  131       `
/*
** EPITECH PROJECT, 2018
** my_find_prime_sup
** File description:
** lib
*/

int my_find_prime_sup(int nb)
{
    return (0);
}

my_strcpy.c/    1539074127  1000  1000  100755  138       `
/*
** EPITECH PROJECT, 2018
** my_strcpy
** File description:
** lib
*/

char *my_strcpy(char *dest, char const *src)
{
    return (0);
}
my_strncpy.c/   1539074192  1000  1000  100755  147       `
/*
** EPITECH PROJECT, 2018
** my_strncpy
** File description:
** lib
*/

char *my_strncpy(char *dest, char const *src, int n)
{
    return (0);
}

my_revstr.c/    1539074286  1000  1000  100755  120       `
/*
** EPITECH PROJECT, 2018
** my_revstr
** File description:
** lib
*/

char *my_revstr(char *str)
{
    return (0);
}
my_strstr.c/    1539074347  1000  1000  100755  141       `
/*
** EPITECH PROJECT, 2018
** my_strstr
** File description:
** lib
*/

char *my_strstr(char *str, char const *to_find)
{
    return (0);
}

my_strcmp.c/    1539262499  1000  1000  100755  249       `
/*
** EPITECH PROJECT, 2018
** my_strcmp
** File description:
** lib
*/

int my_strcmp(char const *s1, char const *s2)
{
    int i = 0;

    for (i = 0; s1[i] = s2[i] && s1[i] != '\0' && s2 != '\0') {
        i++
    }
    return (s1[i] - s2[i]);
}

my_strncmp.c/   1539074565  1000  1000  100755  148       `
/*
** EPITECH PROJECT, 2018
** my_strncmp
** File description:
** lib
*/

int my_strncmp(char const *s1, char const *s2, int n)
{
    return (0);
}
my_strupcase.c/ 1539074640  1000  1000  100755  126       `
/*
** EPITECH PROJECT, 2018
** my_strupcase
** File description:
** lib
*/

char *my_strupcase(char *str)
{
    return (0);
}
my_strlowcase.c/1539074752  1000  1000  100755  128       `
/*
** EPITECH PROJECT, 2018
** my_strlowcase
** File description:
** lib
*/

char *my_strlowcase(char *str)
{
    return (0);
}
/92             1539074844  1000  1000  100755  134       `
/*
** EPITECH PROJECT, 2018
** my_strcapitalize
** File description:
** lib
*/

char *my_strcapitalize(char *str)
{
    return (0);
}
/112            1539074959  1000  1000  100755  134       `
/*
** EPITECH PROJECT, 2018
** my_str_isalpha
** File description:
** lib
*/

int my_str_isalpha(char const *str)
{
    return (0);
}
my_str_isnum.c/ 1539075139  1000  1000  100755  130       `
/*
** EPITECH PROJECT, 2018
** my_str_isnum
** File description:
** lib
*/

int my_str_isnum(char const *str)
{
    return (0);
}
/130            1539075204  1000  1000  100755  134       `
/*
** EPITECH PROJECT, 2018
** my_str_islower
** File description:
** lib
*/

int my_str_islower(char const *str)
{
    return (0);
}
/148            1539075267  1000  1000  100755  134       `
/*
** EPITECH PROJECT, 2018
** my_str_isupper
** File description:
** lib
*/

int my_str_isupper(char const *str)
{
    return (0);
}
/166            1539075361  1000  1000  100755  142       `
/*
** EPITECH PROJECT, 2018
** my_str_isprintable
** File description:
** lib
*/

int my_str_isprintable(char const *str)
{
    return (0);
}
my_showstr.c/   1539075465  1000  1000  100755  126       `
/*
** EPITECH PROJECT, 2018
** my_showstr
** File description:
** lib
*/

int my_showstr(char const *str)
{
    return (0);
}
my_showmem.c/   1539075562  1000  1000  100755  137       `
/*
** EPITECH PROJECT, 2018
** my_showmeme
** File description:
** lib
*/

int my_showmem(char const *str, int size)
{
    return (0);
}

my_strcat.c/    1539084912  1000  1000  100755  310       `
/*
** EPITECH PROJECT, 2018
** my_strcat
** File description:
** lib
*/

#include <string.h>

char *my_strcat(char *dest, char const *src)
{
    int i = 0;
    int len = my_strlen(dest);

    for (i = 0; src[i] != '\0'; i++) {
        dest[len + i] = src[i];
    }
    dest[len + i] = '\0';
    return dest;
}
my_strncat.c/   1539093178  1000  1000  100755  317       `
/*
** EPITECH PROJECT, 2018
** my_strncat
** File description:
** lib
*/

char *my_strncat(char *dest, char const *src, int nb)
{
    int i = 0;
    int len = my_strlen(dest);

    for (i = 0; i < nb && src[i] != '\0'; i++) {
        dest[len + i] = src[i];
    }
    dest[len + i] = '\0';        
    return dest;
}

